# Generated by Django 5.2.7 on 2025-10-10 16:19

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Joia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='nome')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='descrição')),
                ('preco', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='preço')),
                ('estoque', models.IntegerField(default=0, verbose_name='estoque')),
                ('imagem_url', models.URLField(blank=True, max_length=500, null=True, verbose_name='URL da imagem')),
                ('disponivel', models.BooleanField(default=True, verbose_name='disponível')),
                ('categoria', models.CharField(choices=[('OURO', 'Ouro'), ('PRATA', 'Prata'), ('BIJUTERIA', 'Bijuteria')], max_length=10, verbose_name='categoria')),
                ('subcategoria', models.CharField(choices=[('ANEIS', 'Anéis'), ('PULSEIRAS', 'Pulseiras'), ('COLARES', 'Colares'), ('BRINCOS', 'Brincos'), ('TORNOZELEIRAS', 'Tornozeleiras')], max_length=15, verbose_name='subcategoria')),
                ('tamanho', models.CharField(blank=True, max_length=20, null=True, verbose_name='tamanho')),
                ('genero', models.CharField(blank=True, max_length=20, null=True, verbose_name='gênero')),
                ('tipo_publico', models.CharField(blank=True, choices=[('ADULTO', 'Adulto'), ('INFANTIL', 'Infantil')], max_length=20, null=True, verbose_name='público')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='data de cadastro')),
            ],
            options={
                'verbose_name': 'jóia',
                'verbose_name_plural': 'jóias',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo_usuario', models.CharField(choices=[('CLIENTE', 'Cliente'), ('VENDEDOR', 'Vendedor')], default='CLIENTE', help_text='Define o tipo de acesso do usuário no sistema.', max_length=10, verbose_name='tipo de usuário')),
                ('telefone', models.CharField(blank=True, max_length=15, null=True, verbose_name='telefone')),
                ('groups', models.ManyToManyField(blank=True, help_text='Os grupos aos quais este usuário pertence.', related_name='vejoias_usuarios_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permissões específicas para este usuário.', related_name='vejoias_usuarios_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'usuário',
                'verbose_name_plural': 'usuários',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Carrinho',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usuario', models.OneToOneField(help_text='O carrinho pertence a um único usuário.', on_delete=django.db.models.deletion.CASCADE, related_name='carrinho', to=settings.AUTH_USER_MODEL, verbose_name='usuário')),
            ],
            options={
                'verbose_name': 'carrinho',
                'verbose_name_plural': 'carrinhos',
            },
        ),
        migrations.CreateModel(
            name='Endereco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cep', models.CharField(max_length=9, verbose_name='CEP')),
                ('rua', models.CharField(max_length=255, verbose_name='rua')),
                ('numero', models.CharField(max_length=10, verbose_name='número')),
                ('bairro', models.CharField(max_length=100, verbose_name='bairro')),
                ('cidade', models.CharField(max_length=100, verbose_name='cidade')),
                ('estado', models.CharField(max_length=20, verbose_name='estado')),
                ('referencia', models.TextField(blank=True, null=True, verbose_name='referência')),
                ('usuario', models.ForeignKey(help_text='Usuário associado a este endereço.', on_delete=django.db.models.deletion.CASCADE, related_name='enderecos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'endereço',
                'verbose_name_plural': 'endereços',
            },
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='data de criação')),
                ('status', models.CharField(choices=[('PENDENTE', 'Pendente'), ('PAGO', 'Pago'), ('EM_ENVIO', 'Em Envio'), ('ENTREGUE', 'Entregue'), ('CANCELADO', 'Cancelado')], default='PENDENTE', max_length=10, verbose_name='status')),
                ('total', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='total')),
                ('transacao_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='ID da transação')),
                ('endereco_entrega', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pedidos', to='infrastructure.endereco', verbose_name='endereço de entrega')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pedidos', to=settings.AUTH_USER_MODEL, verbose_name='usuário')),
            ],
            options={
                'verbose_name': 'pedido',
                'verbose_name_plural': 'pedidos',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='ItemCarrinho',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.PositiveIntegerField(verbose_name='quantidade')),
                ('carrinho', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='infrastructure.carrinho', verbose_name='carrinho')),
                ('joia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens_carrinho', to='infrastructure.joia', verbose_name='jóia')),
            ],
            options={
                'verbose_name': 'item de carrinho',
                'verbose_name_plural': 'itens de carrinho',
                'unique_together': {('carrinho', 'joia')},
            },
        ),
        migrations.CreateModel(
            name='ItemPedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.PositiveIntegerField(verbose_name='quantidade')),
                ('preco_unitario', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='preço unitário')),
                ('joia', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='itens_pedido', to='infrastructure.joia', verbose_name='jóia')),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='infrastructure.pedido', verbose_name='pedido')),
            ],
            options={
                'verbose_name': 'item de pedido',
                'verbose_name_plural': 'itens de pedido',
                'ordering': ['pedido'],
                'unique_together': {('pedido', 'joia')},
            },
        ),
    ]
